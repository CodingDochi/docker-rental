
version: '3'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      mongo:
        condition: service_healthy
    volumes:
      - ./myapi:/app/myapi
      - /var/run/docker.sock:/var/run/docker.sock  
    environment:
      - MONGO_URI=mongodb://mongo:27017
      - PYTHONPATH=/app
    command: uvicorn myapi.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 40s

  # test:
  #   build: .
  #   depends_on:
  #     api:
  #       condition: service_healthy
  #   command: pytest
  #   networks:
  #     - app-network
  #   environment:
  #     - MONGO_URI=mongodb://mongo:27017
  #     - PYTHONPATH=/app
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock  

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data: